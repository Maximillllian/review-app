name: Reusable deploy

on:
    workflow_call:
        inputs:
            container_name:
                required: true
                type: string
            branch_name:
                required: true
                type: string
            host_address:
                required: true
                type: string
        secrets:
            PSWD:
                required: true
            USER:
                required: true
            HOST:
                required: true
            ARTIFACT_SSH_KEY:
                required: true
            DOCKERHUB_USERNAME:
                required: true
            DOCKERHUB_TOKEN:
                required: true

jobs:
    build:
        runs-on: ubuntu-latest
        env:
          APP_NAME: ${{ inputs.container_name }}
          PSWD: ${{ secrets.PSWD }}
          USER: ${{ secrets.USER }}
          HOST: ${{ secrets.HOST }}
          ARTIFACT_HOST: ${{ inputs.host_address }}
          ARTIFACT_SSH_KEY: ${{ secrets.ARTIFACT_SSH_KEY }}
          DOCKER_REPO: maximillllian/review-app
          DOCKER_IMAGE: maximillllian/review-app:${{ github.sha }}
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4
            with:
                ref: ${{ inputs.branch_name }}
          - name: DockerHub Build And Push
            uses: Abhishek-070/Dockerhub-Build-Push@v1.0
            with:
                registry_url: 'docker.io'
                repository_name: ${{ env.DOCKER_REPO }}
                user_name: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}
                image_version: ${{ github.sha }}
                docker_file: '.'
          - name: Set up SSH
            run: |
              env
              mkdir -p ~/.ssh
              echo "${{ env.ARTIFACT_SSH_KEY }}" > ~/.ssh/id_rsa
              chmod 600 ~/.ssh/id_rsa
              ssh-keyscan -p 22 ${{ env.ARTIFACT_HOST }} >> ~/.ssh/known_hosts
              sudo apt-get install sshpass
          - name: Deploy to server
            run: |
              sshpass -p ${{ env.PSWD }} ssh -v -o StrictHostKeyChecking=no ${{ env.USER }}@${{ env.HOST }} <<'ENDSSH'
              docker pull ${{ env.DOCKER_IMAGE }}
              docker stop ${{ env.APP_NAME }}
              docker rm ${{ env.APP_NAME }}
              docker run --name ${{ env.APP_NAME }} \
                -e VIRTUAL_HOST=${{ env.ARTIFACT_HOST }} \
                -e VIRTUAL_PORT=8080 \
                --volume /var/run/docker.sock:/var/run/docker.sock \
                -dit ${{ env.DOCKER_IMAGE }}
              ENDSSH
